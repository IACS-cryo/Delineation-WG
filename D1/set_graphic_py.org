
#+PROPERTY: header-args:jupyter-python+ :session IDWG

* Table of contents                               :toc_2:noexport:
- [[#introduction][Introduction]]
- [[#setup][Setup]]
- [[#products][Products]]
  - [[#bedmachine-v5][BedMachine v5]]
  - [[#citterio--ahlstrøm-2013][Citterio & Ahlstrøm 2013]]

* Introduction

Workbook to create set difference graphic

* Setup

#+begin_src jupyter-python :exports both
import numpy as np
import geopandas as gpd
import rioxarray
import xarray as xr
import rasterio as rio
import shapely

def rm2p(r=None, m=None, t=None):
    """Raster r and mask m to polygon using transform t

    WARNING: Takes 10s of seconds per call
    """
    p = []
    
    shapes = rio.features.shapes(r, mask=m, transform=t.transform)
    for shape, value in shapes:
        p.append(shapely.geometry.shape(shape))
        
    mp = shapely.geometry.MultiPolygon(p)
    return mp

try:
    roi = gpd.read_file('roi.gpkg')
except:
    roi = gpd.GeoDataFrame(columns=['geometry'])
    roi = roi.set_crs('EPSG:3413')
#+end_src

#+RESULTS:

* Products
** BedMachine v5

#+begin_src jupyter-python :exports both
d = rio.open('netcdf:/home/kdm/data/Morlighem_2017/BedMachineGreenland-v5.nc:mask')
r = d.read(1).astype(np.uint8)

print('BedMachine:all...')
roi.loc['BedMachine:all'] = rm2p(r=r, m=((r==2)|(r==3)), t=d)

print('BedMachine:main...')
roi.loc['BedMachine:main'] = max(roi.loc['BedMachine:all'], key=lambda a: a.area)

print('BedMachine:shelf...')
roi.loc['BedMachine:shelf'] = rm2p(r=r, m=(r==3), t=d)

print('BedMachine:peripheral...')
roi.loc['BedMachine:peripheral'] = roi.loc['BedMachine:all']\
    .difference((roi.loc['BedMachine:main'].union(roi.loc['BedMachine:shelf'])))

roi = roi.set_crs(d.crs)
roi.to_file('roi.gpkg', driver='GPKG')
#+end_src


*** Displays
**** Interactive

#+BEGIN_SRC jupyter-python :exports both
columns = [_ for _ in roi.index if 'BedMachine' in _]
map = roi[columns]\
    .drop('BedMachine:all')\
    .simplify(1000)\
    .explore(color=['red','green','blue'])\
    .save('explore_bedmachine.html')
#+END_SRC

#+RESULTS:

**** Subplots

#+BEGIN_SRC jupyter-python :exports both
import matplotlib.pyplot as plt
import matplotlib as mpl
mpl.rcParams['axes.facecolor'] = '#fffaf0'

fig, ax = plt.subplots(nrows=2, ncols=2)
ax = ax.flatten()
for i,r in enumerate(roi.index):
    gpd.GeoSeries(roi[r], crs=roi.crs).plot(ax=ax[i])
    ax[i].set_title(r)

for a in ax:
    # a.axis('off')
    a.set_xticks([])
    a.set_yticks([])
#+END_SRC


** Citterio & Ahlstrøm 2013

#+begin_src jupyter-python :exports both
df = gpd.read_file('/home/kdm/data/Citterio_2013/PROMICE_3413/PROMICE_250_GIC_BASE_Jason4_Ruth_WGS84-b0_a.shp')
df['GIC'] = df['GIC'].astype(int)
df = df.dissolve(by='GIC', aggfunc='first').reset_index()
#+end_src

#+RESULTS:

Explore

#+BEGIN_SRC jupyter-python :exports both
df.simplify(1000).explore(color=['red','green','blue']).save('explore_citterio.html')
#+END_SRC

#+RESULTS:

#+begin_src jupyter-python :exports both
print('Citterio2013:all...')
roi['Citterio2013:all'] = df.dissolve()

print('Citterio2013:GIC0...')
roi['Citterio2013:GIC0'] = df[df['GIC'] == 0]

print('Citterio2013:GIC1...')
roi['Citterio2013:GIC1'] = df[df['GIC'] == 1]

print('Citterio2013:GIC2...')
roi['Citterio2013:GIC2'] = df[df['GIC'] == 2]
#+end_src

#+RESULTS:
: Citterio2013:all...

